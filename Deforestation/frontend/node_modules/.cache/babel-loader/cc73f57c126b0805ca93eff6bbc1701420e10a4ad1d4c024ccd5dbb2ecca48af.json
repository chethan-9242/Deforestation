{"ast":null,"code":"// News service for fetching deforestation-related news\n\n// Simulated news data - In production, this would come from real APIs\nconst simulatedNews = [{\n  id: '1',\n  title: 'Amazon Rainforest Deforestation Reaches 15-Year High Despite Conservation Efforts',\n  description: 'New satellite data reveals that Amazon deforestation has surged to its highest level in 15 years, with over 13,000 square kilometers cleared in the past year alone.',\n  url: 'https://example.com/amazon-deforestation-high',\n  source: 'Environmental Times',\n  author: 'Dr. Maria Santos',\n  publishedAt: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\n  // 2 hours ago\n  urlToImage: 'https://images.unsplash.com/photo-1574482620881-b4ec2e2c8dd0?w=500&h=300&fit=crop',\n  category: 'breaking',\n  severity: 'critical',\n  location: 'Brazil, Amazon Basin',\n  readTime: 5\n}, {\n  id: '2',\n  title: 'Indonesia Implements New Forest Protection Laws to Combat Palm Oil Deforestation',\n  description: 'The Indonesian government announces stricter regulations on palm oil plantations following international pressure to protect remaining tropical forests.',\n  url: 'https://example.com/indonesia-forest-laws',\n  source: 'Reuters Environmental',\n  author: 'James Wilson',\n  publishedAt: new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString(),\n  // 6 hours ago\n  urlToImage: 'https://images.unsplash.com/photo-1571068316344-75bc76f77890?w=500&h=300&fit=crop',\n  category: 'policy',\n  severity: 'medium',\n  location: 'Indonesia, Borneo',\n  readTime: 4\n}, {\n  id: '3',\n  title: 'AI Technology Helps Identify Illegal Logging in Congo Basin Forests',\n  description: 'Researchers deploy advanced AI algorithms and satellite monitoring to detect and prevent illegal logging activities in Central African forests.',\n  url: 'https://example.com/ai-illegal-logging',\n  source: 'Nature Conservation Today',\n  author: 'Dr. Emmanuel Kone',\n  publishedAt: new Date(Date.now() - 12 * 60 * 60 * 1000).toISOString(),\n  // 12 hours ago\n  urlToImage: 'https://images.unsplash.com/photo-1574482620811-1aa16ffe3c82?w=500&h=300&fit=crop',\n  category: 'research',\n  severity: 'medium',\n  location: 'Democratic Republic of Congo',\n  readTime: 6\n}, {\n  id: '4',\n  title: 'Canadian Wildfires Destroy 2 Million Hectares of Boreal Forest',\n  description: 'Unprecedented wildfire season in Canada has resulted in the loss of over 2 million hectares of crucial boreal forest, affecting global carbon absorption.',\n  url: 'https://example.com/canada-wildfires',\n  source: 'Global Forest Watch',\n  author: 'Sarah Mitchell',\n  publishedAt: new Date(Date.now() - 18 * 60 * 60 * 1000).toISOString(),\n  // 18 hours ago\n  urlToImage: 'https://images.unsplash.com/photo-1574482620811-1aa16ffe3c82?w=500&h=300&fit=crop',\n  category: 'wildfire',\n  severity: 'high',\n  location: 'Canada, British Columbia',\n  readTime: 7\n}, {\n  id: '5',\n  title: 'European Union Bans Imports from Deforestation-Linked Supply Chains',\n  description: 'New EU regulation will prohibit imports of commodities linked to deforestation, affecting global trade in soy, beef, palm oil, and timber.',\n  url: 'https://example.com/eu-deforestation-ban',\n  source: 'European Environmental Agency',\n  author: 'Dr. Hans Mueller',\n  publishedAt: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n  // 1 day ago\n  urlToImage: 'https://images.unsplash.com/photo-1574482620881-b4ec2e2c8dd0?w=500&h=300&fit=crop',\n  category: 'policy',\n  severity: 'medium',\n  location: 'European Union',\n  readTime: 5\n}, {\n  id: '6',\n  title: 'Innovative Reforestation Project Uses Drones to Plant 1 Million Trees',\n  description: 'A groundbreaking conservation initiative in Peru successfully plants one million native trees using drone technology and seed bombs.',\n  url: 'https://example.com/drone-reforestation',\n  source: 'Conservation Weekly',\n  author: 'Carlos Rodriguez',\n  publishedAt: new Date(Date.now() - 36 * 60 * 60 * 1000).toISOString(),\n  // 1.5 days ago\n  urlToImage: 'https://images.unsplash.com/photo-1571068316344-75bc76f77890?w=500&h=300&fit=crop',\n  category: 'conservation',\n  severity: 'low',\n  location: 'Peru, Amazon Region',\n  readTime: 4\n}, {\n  id: '7',\n  title: 'Satellite Data Reveals Hidden Deforestation in Myanmar Forests',\n  description: 'New analysis of satellite imagery uncovers extensive illegal logging operations in Myanmar, highlighting the need for international monitoring.',\n  url: 'https://example.com/myanmar-hidden-deforestation',\n  source: 'Forest Monitoring Institute',\n  author: 'Dr. Aung San',\n  publishedAt: new Date(Date.now() - 48 * 60 * 60 * 1000).toISOString(),\n  // 2 days ago\n  urlToImage: 'https://images.unsplash.com/photo-1574482620811-1aa16ffe3c82?w=500&h=300&fit=crop',\n  category: 'research',\n  severity: 'high',\n  location: 'Myanmar',\n  readTime: 6\n}, {\n  id: '8',\n  title: 'Indigenous Communities Win Legal Victory to Protect Ancestral Forests',\n  description: 'Supreme Court ruling grants land rights to indigenous communities, protecting 500,000 hectares of pristine rainforest from development.',\n  url: 'https://example.com/indigenous-forest-victory',\n  source: 'Indigenous Rights Today',\n  author: 'Elena Guajajara',\n  publishedAt: new Date(Date.now() - 60 * 60 * 60 * 1000).toISOString(),\n  // 2.5 days ago\n  urlToImage: 'https://images.unsplash.com/photo-1574482620881-b4ec2e2c8dd0?w=500&h=300&fit=crop',\n  category: 'conservation',\n  severity: 'low',\n  location: 'Colombia',\n  readTime: 5\n}, {\n  id: '9',\n  title: 'Climate Change Accelerates Forest Loss in Sub-Saharan Africa',\n  description: 'New research indicates that rising temperatures and changing precipitation patterns are accelerating forest degradation across West and East Africa.',\n  url: 'https://example.com/climate-africa-forests',\n  source: 'Climate Research Journal',\n  author: 'Prof. Kwame Asante',\n  publishedAt: new Date(Date.now() - 72 * 60 * 60 * 1000).toISOString(),\n  // 3 days ago\n  urlToImage: 'https://images.unsplash.com/photo-1571068316344-75bc76f77890?w=500&h=300&fit=crop',\n  category: 'research',\n  severity: 'high',\n  location: 'Sub-Saharan Africa',\n  readTime: 8\n}, {\n  id: '10',\n  title: '$2 Billion Forest Conservation Fund Launched by International Coalition',\n  description: 'Major international donors commit $2 billion to forest conservation efforts, targeting critical forest ecosystems in tropical regions.',\n  url: 'https://example.com/forest-conservation-fund',\n  source: 'World Bank Environmental',\n  author: 'Alexandra Thompson',\n  publishedAt: new Date(Date.now() - 96 * 60 * 60 * 1000).toISOString(),\n  // 4 days ago\n  urlToImage: 'https://images.unsplash.com/photo-1574482620811-1aa16ffe3c82?w=500&h=300&fit=crop',\n  category: 'conservation',\n  severity: 'low',\n  location: 'Global',\n  readTime: 4\n}];\nclass NewsService {\n  constructor() {\n    // In a real application, you would use environment variables for API keys\n    this.NEWS_API_KEY = 'your_news_api_key_here';\n    this.NEWS_API_URL = 'https://newsapi.org/v2/everything';\n  }\n  // Simulated API call - replace with real API calls in production\n  async fetchDeforestationNews(category, limit = 20) {\n    try {\n      // Simulate API loading delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      let filteredNews = [...simulatedNews];\n\n      // Filter by category if specified\n      if (category && category !== 'all') {\n        filteredNews = filteredNews.filter(article => article.category === category);\n      }\n\n      // Sort by most recent first\n      filteredNews.sort((a, b) => new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime());\n      return filteredNews.slice(0, limit);\n    } catch (error) {\n      console.error('Error fetching news:', error);\n      throw new Error('Failed to fetch news articles');\n    }\n  }\n\n  // Real API implementation example (commented out)\n  /*\r\n  async fetchDeforestationNewsFromAPI(category?: string, limit: number = 20): Promise<NewsArticle[]> {\r\n    const searchQuery = 'deforestation OR \"forest loss\" OR \"illegal logging\" OR \"forest conservation\" OR \"rainforest destruction\"';\r\n    const url = `${this.NEWS_API_URL}?q=${encodeURIComponent(searchQuery)}&apiKey=${this.NEWS_API_KEY}&pageSize=${limit}&sortBy=publishedAt&language=en`;\r\n      try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n        const data = await response.json();\r\n      \r\n      return data.articles.map((article: any, index: number) => ({\r\n        id: `${article.publishedAt}_${index}`,\r\n        title: article.title,\r\n        description: article.description || '',\r\n        url: article.url,\r\n        source: article.source.name,\r\n        author: article.author,\r\n        publishedAt: article.publishedAt,\r\n        urlToImage: article.urlToImage,\r\n        category: this.categorizeArticle(article.title + ' ' + article.description),\r\n        severity: this.assessSeverity(article.title + ' ' + article.description),\r\n        location: this.extractLocation(article.title + ' ' + article.description),\r\n        readTime: this.estimateReadTime(article.description)\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error fetching real news:', error);\r\n      // Fallback to simulated data\r\n      return this.fetchDeforestationNews(category, limit);\r\n    }\r\n  }\r\n  */\n\n  // Helper methods for categorization and analysis\n  categorizeArticle(text) {\n    const lowercaseText = text.toLowerCase();\n    if (lowercaseText.includes('breaking') || lowercaseText.includes('urgent') || lowercaseText.includes('alert')) {\n      return 'breaking';\n    } else if (lowercaseText.includes('wildfire') || lowercaseText.includes('fire') || lowercaseText.includes('burning')) {\n      return 'wildfire';\n    } else if (lowercaseText.includes('conservation') || lowercaseText.includes('protection') || lowercaseText.includes('restoration')) {\n      return 'conservation';\n    } else if (lowercaseText.includes('policy') || lowercaseText.includes('law') || lowercaseText.includes('government') || lowercaseText.includes('regulation')) {\n      return 'policy';\n    } else if (lowercaseText.includes('research') || lowercaseText.includes('study') || lowercaseText.includes('scientist')) {\n      return 'research';\n    }\n    return 'general';\n  }\n  assessSeverity(text) {\n    const lowercaseText = text.toLowerCase();\n    if (lowercaseText.includes('critical') || lowercaseText.includes('devastating') || lowercaseText.includes('emergency')) {\n      return 'critical';\n    } else if (lowercaseText.includes('high') || lowercaseText.includes('severe') || lowercaseText.includes('alarming')) {\n      return 'high';\n    } else if (lowercaseText.includes('moderate') || lowercaseText.includes('concerning')) {\n      return 'medium';\n    }\n    return 'low';\n  }\n  extractLocation(text) {\n    // Simple location extraction - in production, use a proper NLP service\n    const locations = ['Amazon', 'Indonesia', 'Brazil', 'Congo', 'Myanmar', 'Canada', 'Peru', 'Colombia', 'Africa'];\n    const foundLocation = locations.find(location => text.toLowerCase().includes(location.toLowerCase()));\n    return foundLocation || 'Global';\n  }\n  estimateReadTime(text) {\n    const wordsPerMinute = 200;\n    const wordCount = text.split(' ').length;\n    return Math.max(1, Math.ceil(wordCount / wordsPerMinute));\n  }\n\n  // Search functionality\n  async searchNews(query) {\n    const allNews = await this.fetchDeforestationNews();\n    const lowercaseQuery = query.toLowerCase();\n    return allNews.filter(article => article.title.toLowerCase().includes(lowercaseQuery) || article.description.toLowerCase().includes(lowercaseQuery) || article.source.toLowerCase().includes(lowercaseQuery) || article.location && article.location.toLowerCase().includes(lowercaseQuery));\n  }\n\n  // Get trending topics\n  getTrendingTopics() {\n    return ['Amazon Deforestation', 'Palm Oil', 'Illegal Logging', 'Climate Change', 'Forest Conservation', 'Indigenous Rights', 'Satellite Monitoring', 'Reforestation'];\n  }\n\n  // Format time ago\n  formatTimeAgo(dateString) {\n    const now = new Date();\n    const date = new Date(dateString);\n    const diffInMilliseconds = now.getTime() - date.getTime();\n    const diffInHours = Math.floor(diffInMilliseconds / (1000 * 60 * 60));\n    const diffInDays = Math.floor(diffInHours / 24);\n    if (diffInHours < 1) {\n      return 'Just now';\n    } else if (diffInHours < 24) {\n      return `${diffInHours} hour${diffInHours === 1 ? '' : 's'} ago`;\n    } else if (diffInDays < 7) {\n      return `${diffInDays} day${diffInDays === 1 ? '' : 's'} ago`;\n    } else {\n      return date.toLocaleDateString();\n    }\n  }\n}\nexport const newsService = new NewsService();\nexport default newsService;","map":{"version":3,"names":["simulatedNews","id","title","description","url","source","author","publishedAt","Date","now","toISOString","urlToImage","category","severity","location","readTime","NewsService","constructor","NEWS_API_KEY","NEWS_API_URL","fetchDeforestationNews","limit","Promise","resolve","setTimeout","filteredNews","filter","article","sort","a","b","getTime","slice","error","console","Error","categorizeArticle","text","lowercaseText","toLowerCase","includes","assessSeverity","extractLocation","locations","foundLocation","find","estimateReadTime","wordsPerMinute","wordCount","split","length","Math","max","ceil","searchNews","query","allNews","lowercaseQuery","getTrendingTopics","formatTimeAgo","dateString","date","diffInMilliseconds","diffInHours","floor","diffInDays","toLocaleDateString","newsService"],"sources":["C:/Users/Chethan/OneDrive/Desktop/Deforestation/Deforestation/frontend/src/services/newsService.ts"],"sourcesContent":["// News service for fetching deforestation-related news\r\nexport interface NewsArticle {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  url: string;\r\n  source: string;\r\n  author?: string;\r\n  publishedAt: string;\r\n  urlToImage?: string;\r\n  category: 'breaking' | 'conservation' | 'policy' | 'research' | 'wildfire' | 'general';\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  location?: string;\r\n  readTime: number; // in minutes\r\n}\r\n\r\n// Simulated news data - In production, this would come from real APIs\r\nconst simulatedNews: NewsArticle[] = [\r\n  {\r\n    id: '1',\r\n    title: 'Amazon Rainforest Deforestation Reaches 15-Year High Despite Conservation Efforts',\r\n    description: 'New satellite data reveals that Amazon deforestation has surged to its highest level in 15 years, with over 13,000 square kilometers cleared in the past year alone.',\r\n    url: 'https://example.com/amazon-deforestation-high',\r\n    source: 'Environmental Times',\r\n    author: 'Dr. Maria Santos',\r\n    publishedAt: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(), // 2 hours ago\r\n    urlToImage: 'https://images.unsplash.com/photo-1574482620881-b4ec2e2c8dd0?w=500&h=300&fit=crop',\r\n    category: 'breaking',\r\n    severity: 'critical',\r\n    location: 'Brazil, Amazon Basin',\r\n    readTime: 5\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'Indonesia Implements New Forest Protection Laws to Combat Palm Oil Deforestation',\r\n    description: 'The Indonesian government announces stricter regulations on palm oil plantations following international pressure to protect remaining tropical forests.',\r\n    url: 'https://example.com/indonesia-forest-laws',\r\n    source: 'Reuters Environmental',\r\n    author: 'James Wilson',\r\n    publishedAt: new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString(), // 6 hours ago\r\n    urlToImage: 'https://images.unsplash.com/photo-1571068316344-75bc76f77890?w=500&h=300&fit=crop',\r\n    category: 'policy',\r\n    severity: 'medium',\r\n    location: 'Indonesia, Borneo',\r\n    readTime: 4\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'AI Technology Helps Identify Illegal Logging in Congo Basin Forests',\r\n    description: 'Researchers deploy advanced AI algorithms and satellite monitoring to detect and prevent illegal logging activities in Central African forests.',\r\n    url: 'https://example.com/ai-illegal-logging',\r\n    source: 'Nature Conservation Today',\r\n    author: 'Dr. Emmanuel Kone',\r\n    publishedAt: new Date(Date.now() - 12 * 60 * 60 * 1000).toISOString(), // 12 hours ago\r\n    urlToImage: 'https://images.unsplash.com/photo-1574482620811-1aa16ffe3c82?w=500&h=300&fit=crop',\r\n    category: 'research',\r\n    severity: 'medium',\r\n    location: 'Democratic Republic of Congo',\r\n    readTime: 6\r\n  },\r\n  {\r\n    id: '4',\r\n    title: 'Canadian Wildfires Destroy 2 Million Hectares of Boreal Forest',\r\n    description: 'Unprecedented wildfire season in Canada has resulted in the loss of over 2 million hectares of crucial boreal forest, affecting global carbon absorption.',\r\n    url: 'https://example.com/canada-wildfires',\r\n    source: 'Global Forest Watch',\r\n    author: 'Sarah Mitchell',\r\n    publishedAt: new Date(Date.now() - 18 * 60 * 60 * 1000).toISOString(), // 18 hours ago\r\n    urlToImage: 'https://images.unsplash.com/photo-1574482620811-1aa16ffe3c82?w=500&h=300&fit=crop',\r\n    category: 'wildfire',\r\n    severity: 'high',\r\n    location: 'Canada, British Columbia',\r\n    readTime: 7\r\n  },\r\n  {\r\n    id: '5',\r\n    title: 'European Union Bans Imports from Deforestation-Linked Supply Chains',\r\n    description: 'New EU regulation will prohibit imports of commodities linked to deforestation, affecting global trade in soy, beef, palm oil, and timber.',\r\n    url: 'https://example.com/eu-deforestation-ban',\r\n    source: 'European Environmental Agency',\r\n    author: 'Dr. Hans Mueller',\r\n    publishedAt: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(), // 1 day ago\r\n    urlToImage: 'https://images.unsplash.com/photo-1574482620881-b4ec2e2c8dd0?w=500&h=300&fit=crop',\r\n    category: 'policy',\r\n    severity: 'medium',\r\n    location: 'European Union',\r\n    readTime: 5\r\n  },\r\n  {\r\n    id: '6',\r\n    title: 'Innovative Reforestation Project Uses Drones to Plant 1 Million Trees',\r\n    description: 'A groundbreaking conservation initiative in Peru successfully plants one million native trees using drone technology and seed bombs.',\r\n    url: 'https://example.com/drone-reforestation',\r\n    source: 'Conservation Weekly',\r\n    author: 'Carlos Rodriguez',\r\n    publishedAt: new Date(Date.now() - 36 * 60 * 60 * 1000).toISOString(), // 1.5 days ago\r\n    urlToImage: 'https://images.unsplash.com/photo-1571068316344-75bc76f77890?w=500&h=300&fit=crop',\r\n    category: 'conservation',\r\n    severity: 'low',\r\n    location: 'Peru, Amazon Region',\r\n    readTime: 4\r\n  },\r\n  {\r\n    id: '7',\r\n    title: 'Satellite Data Reveals Hidden Deforestation in Myanmar Forests',\r\n    description: 'New analysis of satellite imagery uncovers extensive illegal logging operations in Myanmar, highlighting the need for international monitoring.',\r\n    url: 'https://example.com/myanmar-hidden-deforestation',\r\n    source: 'Forest Monitoring Institute',\r\n    author: 'Dr. Aung San',\r\n    publishedAt: new Date(Date.now() - 48 * 60 * 60 * 1000).toISOString(), // 2 days ago\r\n    urlToImage: 'https://images.unsplash.com/photo-1574482620811-1aa16ffe3c82?w=500&h=300&fit=crop',\r\n    category: 'research',\r\n    severity: 'high',\r\n    location: 'Myanmar',\r\n    readTime: 6\r\n  },\r\n  {\r\n    id: '8',\r\n    title: 'Indigenous Communities Win Legal Victory to Protect Ancestral Forests',\r\n    description: 'Supreme Court ruling grants land rights to indigenous communities, protecting 500,000 hectares of pristine rainforest from development.',\r\n    url: 'https://example.com/indigenous-forest-victory',\r\n    source: 'Indigenous Rights Today',\r\n    author: 'Elena Guajajara',\r\n    publishedAt: new Date(Date.now() - 60 * 60 * 60 * 1000).toISOString(), // 2.5 days ago\r\n    urlToImage: 'https://images.unsplash.com/photo-1574482620881-b4ec2e2c8dd0?w=500&h=300&fit=crop',\r\n    category: 'conservation',\r\n    severity: 'low',\r\n    location: 'Colombia',\r\n    readTime: 5\r\n  },\r\n  {\r\n    id: '9',\r\n    title: 'Climate Change Accelerates Forest Loss in Sub-Saharan Africa',\r\n    description: 'New research indicates that rising temperatures and changing precipitation patterns are accelerating forest degradation across West and East Africa.',\r\n    url: 'https://example.com/climate-africa-forests',\r\n    source: 'Climate Research Journal',\r\n    author: 'Prof. Kwame Asante',\r\n    publishedAt: new Date(Date.now() - 72 * 60 * 60 * 1000).toISOString(), // 3 days ago\r\n    urlToImage: 'https://images.unsplash.com/photo-1571068316344-75bc76f77890?w=500&h=300&fit=crop',\r\n    category: 'research',\r\n    severity: 'high',\r\n    location: 'Sub-Saharan Africa',\r\n    readTime: 8\r\n  },\r\n  {\r\n    id: '10',\r\n    title: '$2 Billion Forest Conservation Fund Launched by International Coalition',\r\n    description: 'Major international donors commit $2 billion to forest conservation efforts, targeting critical forest ecosystems in tropical regions.',\r\n    url: 'https://example.com/forest-conservation-fund',\r\n    source: 'World Bank Environmental',\r\n    author: 'Alexandra Thompson',\r\n    publishedAt: new Date(Date.now() - 96 * 60 * 60 * 1000).toISOString(), // 4 days ago\r\n    urlToImage: 'https://images.unsplash.com/photo-1574482620811-1aa16ffe3c82?w=500&h=300&fit=crop',\r\n    category: 'conservation',\r\n    severity: 'low',\r\n    location: 'Global',\r\n    readTime: 4\r\n  }\r\n];\r\n\r\nclass NewsService {\r\n  // In a real application, you would use environment variables for API keys\r\n  private readonly NEWS_API_KEY = 'your_news_api_key_here';\r\n  private readonly NEWS_API_URL = 'https://newsapi.org/v2/everything';\r\n\r\n  // Simulated API call - replace with real API calls in production\r\n  async fetchDeforestationNews(category?: string, limit: number = 20): Promise<NewsArticle[]> {\r\n    try {\r\n      // Simulate API loading delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n      let filteredNews = [...simulatedNews];\r\n\r\n      // Filter by category if specified\r\n      if (category && category !== 'all') {\r\n        filteredNews = filteredNews.filter(article => article.category === category);\r\n      }\r\n\r\n      // Sort by most recent first\r\n      filteredNews.sort((a, b) => new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime());\r\n\r\n      return filteredNews.slice(0, limit);\r\n    } catch (error) {\r\n      console.error('Error fetching news:', error);\r\n      throw new Error('Failed to fetch news articles');\r\n    }\r\n  }\r\n\r\n  // Real API implementation example (commented out)\r\n  /*\r\n  async fetchDeforestationNewsFromAPI(category?: string, limit: number = 20): Promise<NewsArticle[]> {\r\n    const searchQuery = 'deforestation OR \"forest loss\" OR \"illegal logging\" OR \"forest conservation\" OR \"rainforest destruction\"';\r\n    const url = `${this.NEWS_API_URL}?q=${encodeURIComponent(searchQuery)}&apiKey=${this.NEWS_API_KEY}&pageSize=${limit}&sortBy=publishedAt&language=en`;\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      return data.articles.map((article: any, index: number) => ({\r\n        id: `${article.publishedAt}_${index}`,\r\n        title: article.title,\r\n        description: article.description || '',\r\n        url: article.url,\r\n        source: article.source.name,\r\n        author: article.author,\r\n        publishedAt: article.publishedAt,\r\n        urlToImage: article.urlToImage,\r\n        category: this.categorizeArticle(article.title + ' ' + article.description),\r\n        severity: this.assessSeverity(article.title + ' ' + article.description),\r\n        location: this.extractLocation(article.title + ' ' + article.description),\r\n        readTime: this.estimateReadTime(article.description)\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error fetching real news:', error);\r\n      // Fallback to simulated data\r\n      return this.fetchDeforestationNews(category, limit);\r\n    }\r\n  }\r\n  */\r\n\r\n  // Helper methods for categorization and analysis\r\n  private categorizeArticle(text: string): NewsArticle['category'] {\r\n    const lowercaseText = text.toLowerCase();\r\n    \r\n    if (lowercaseText.includes('breaking') || lowercaseText.includes('urgent') || lowercaseText.includes('alert')) {\r\n      return 'breaking';\r\n    } else if (lowercaseText.includes('wildfire') || lowercaseText.includes('fire') || lowercaseText.includes('burning')) {\r\n      return 'wildfire';\r\n    } else if (lowercaseText.includes('conservation') || lowercaseText.includes('protection') || lowercaseText.includes('restoration')) {\r\n      return 'conservation';\r\n    } else if (lowercaseText.includes('policy') || lowercaseText.includes('law') || lowercaseText.includes('government') || lowercaseText.includes('regulation')) {\r\n      return 'policy';\r\n    } else if (lowercaseText.includes('research') || lowercaseText.includes('study') || lowercaseText.includes('scientist')) {\r\n      return 'research';\r\n    }\r\n    \r\n    return 'general';\r\n  }\r\n\r\n  private assessSeverity(text: string): NewsArticle['severity'] {\r\n    const lowercaseText = text.toLowerCase();\r\n    \r\n    if (lowercaseText.includes('critical') || lowercaseText.includes('devastating') || lowercaseText.includes('emergency')) {\r\n      return 'critical';\r\n    } else if (lowercaseText.includes('high') || lowercaseText.includes('severe') || lowercaseText.includes('alarming')) {\r\n      return 'high';\r\n    } else if (lowercaseText.includes('moderate') || lowercaseText.includes('concerning')) {\r\n      return 'medium';\r\n    }\r\n    \r\n    return 'low';\r\n  }\r\n\r\n  private extractLocation(text: string): string {\r\n    // Simple location extraction - in production, use a proper NLP service\r\n    const locations = ['Amazon', 'Indonesia', 'Brazil', 'Congo', 'Myanmar', 'Canada', 'Peru', 'Colombia', 'Africa'];\r\n    const foundLocation = locations.find(location => \r\n      text.toLowerCase().includes(location.toLowerCase())\r\n    );\r\n    return foundLocation || 'Global';\r\n  }\r\n\r\n  private estimateReadTime(text: string): number {\r\n    const wordsPerMinute = 200;\r\n    const wordCount = text.split(' ').length;\r\n    return Math.max(1, Math.ceil(wordCount / wordsPerMinute));\r\n  }\r\n\r\n  // Search functionality\r\n  async searchNews(query: string): Promise<NewsArticle[]> {\r\n    const allNews = await this.fetchDeforestationNews();\r\n    const lowercaseQuery = query.toLowerCase();\r\n    \r\n    return allNews.filter(article => \r\n      article.title.toLowerCase().includes(lowercaseQuery) ||\r\n      article.description.toLowerCase().includes(lowercaseQuery) ||\r\n      article.source.toLowerCase().includes(lowercaseQuery) ||\r\n      (article.location && article.location.toLowerCase().includes(lowercaseQuery))\r\n    );\r\n  }\r\n\r\n  // Get trending topics\r\n  getTrendingTopics(): string[] {\r\n    return [\r\n      'Amazon Deforestation',\r\n      'Palm Oil',\r\n      'Illegal Logging',\r\n      'Climate Change',\r\n      'Forest Conservation',\r\n      'Indigenous Rights',\r\n      'Satellite Monitoring',\r\n      'Reforestation'\r\n    ];\r\n  }\r\n\r\n  // Format time ago\r\n  formatTimeAgo(dateString: string): string {\r\n    const now = new Date();\r\n    const date = new Date(dateString);\r\n    const diffInMilliseconds = now.getTime() - date.getTime();\r\n    const diffInHours = Math.floor(diffInMilliseconds / (1000 * 60 * 60));\r\n    const diffInDays = Math.floor(diffInHours / 24);\r\n    \r\n    if (diffInHours < 1) {\r\n      return 'Just now';\r\n    } else if (diffInHours < 24) {\r\n      return `${diffInHours} hour${diffInHours === 1 ? '' : 's'} ago`;\r\n    } else if (diffInDays < 7) {\r\n      return `${diffInDays} day${diffInDays === 1 ? '' : 's'} ago`;\r\n    } else {\r\n      return date.toLocaleDateString();\r\n    }\r\n  }\r\n}\r\n\r\nexport const newsService = new NewsService();\r\nexport default newsService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}